name: Release

on:
  push:
    tags:
      - 'v[0-9]+.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
  build-release:
    name: Build Release
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: darwin-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: darwin-aarch64
            
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.2
        
      - name: Build target
        run: cargo build --release --target ${{ matrix.target }}
        
      - name: Prepare artifacts
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../httprs-${{ matrix.name }}.tar.gz httprs
          cd -
          
      - name: Upload artifacts
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: httprs-${{ matrix.name }}.tar.gz
